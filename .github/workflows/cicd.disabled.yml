name: CI-CD to AWS ECS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # e.g. cloudops360-backend
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}       # e.g. cloudops360-cluster
      ECS_SERVICE: ${{ secrets.ECS_SERVICE }}       # e.g. cloudops360-backend-svc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build image
        run: |
          IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}
          docker build -t ${IMAGE_URI}:latest -f app/backend/Dockerfile app/backend
          docker tag ${IMAGE_URI}:latest ${IMAGE_URI}:${GITHUB_SHA}

      - name: Push image
        run: |
          IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}
          docker push ${IMAGE_URI}:latest
          docker push ${IMAGE_URI}:${GITHUB_SHA}

      - name: Force new ECS deployment (use latest tag)
        run: |
          aws ecs update-service \
            --cluster "${ECS_CLUSTER}" \
            --service "${ECS_SERVICE}" \
            --force-new-deployment \
            --region "${AWS_REGION}"
